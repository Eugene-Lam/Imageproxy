docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build -f Dockerfile --pull -t "${CI_REGISTRY_IMAGE}${tag}" -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" .
    - docker push "${CI_REGISTRY_IMAGE}${tag}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $PULL != "true"
      exists:
        - Dockerfile

pull:
  image: alpine:latest
  before_script:
    - apk add git
    - git checkout main
    - git remote set-url origin https://root:$gitlab_token@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
    - git remote add upstream https://github.com/willnorris/imageproxy || git remote set-url upstream https://github.com/willnorris/imageproxy
    - git config --global user.email "bot@metahkg.org"
    - git config --global user.name "metahkg-bot"
    - git config pull.rebase false
    - git pull origin main
  script:
    - |
      git fetch upstream
      git merge -X theirs upstream/main -m "Pull upstream" --allow-unrelated-histories
      git push origin --all
  rules:
    - if: $PULL == "true"
